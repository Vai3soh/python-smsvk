Metadata-Version: 2.1
Name: smsvk
Version: 1.0
Summary: Wrapper for automatic reception of SMS-messages by smsvk.net
Home-page: 
Download-URL: 
Author: 
Author-email: 
License: Apache License, Version 2.0, see LICENSE file
Keywords: sms,revice,smsvk,autoreg
Platform: UNKNOWN
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Environment :: Console
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: PyPy
Description-Content-Type: text/markdown
License-File: LICENSE

Python-smsvk 
This requests async wrapper for http://smsvk.net/

Install package:
mkvirtualenv smsvk_env
git clone 
pip install -e .

#Example:
see dir in example.

from smsvk import GetBalance, GetNumber, \
SetStatusActivation, GetCodeActivation
from smsvk import Api
from smsvk.logwr import log_wr

api = Api(api_key, count_phone_number, timeout, limit)

b = GetBalance(api)
print(b.request())

s = GetAvaibleService(api)
print(i.request_json())

c = GetCountNumberService(api)
print(c.request_json(service))

n = GetNumber(api)
print(n.request(service))

#c = [(1, 211, 'this_number' ), (2, 333, 'this_number' ), (3, 3333, 'this_number')]

c = [i + (1,) for i in c] #add status 1 
c = [(1, 211, 'this_number', 1 ), (2, 333, 'this_number', 1 ), (3, 3333, 'this_number', 1)]

send status 
v = SetStatusActivation(api)
print(v.request_(c))

#v = [(1, 211, 'this_number', 'ACCESS_RETRY_GET'), (2, 333, 'this_number', 'ACCESS_READY'), (3, 3333, 'this_number', 'ACCESS_READY')]

v = [(1, 211, 'this_number'), (2, 333, 'this_number'), (3, 3333, 'this_number')]

#waiting sms code 
e = GetCodeActivation(api)
print(e.request(timeout_wait_code,v))


